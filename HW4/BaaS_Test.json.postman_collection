{
	"id": "b532a7aa-b8e5-3e86-b472-c62f33d6007a",
	"name": "BaaS_Test",
	"description": "Testing the node.js proxy that interacts with Apigee's BaaS",
	"order": [
		"f0a73127-0af7-4da8-5134-31b5f01d2822",
		"a93282e7-97ce-b287-c9c5-c1c3cb4c57f6",
		"206dd75f-8dbd-d076-fdb2-e7d52151b696",
		"eaf4ea42-f4ff-4004-dd1f-8eeebb196210",
		"38073033-b754-cb5a-2f1b-d78cf31d9fc2",
		"1ae3c766-9939-a359-b065-96564d7b1636",
		"c15ad60f-49a3-70ee-ae86-c0a514e9e71e"
	],
	"folders": [],
	"timestamp": 1428796814665,
	"synced": false,
	"owner": 0,
	"sharedWithTeam": false,
	"subscribed": false,
	"remoteLink": "",
	"public": false,
	"write": true,
	"requests": [
		{
			"id": "1ae3c766-9939-a359-b065-96564d7b1636",
			"headers": "",
			"url": "127.0.0.1:3000/movies?ql=select * where actors contains 'Patrick' and debut='2000'",
			"pathVariables": {},
			"preRequestScript": "",
			"method": "GET",
			"collectionId": "b532a7aa-b8e5-3e86-b472-c62f33d6007a",
			"data": [],
			"dataMode": "params",
			"name": "Query with multiple parameters",
			"description": "This shows a query that has two criteria: \nA movie that has an actor with the name,\n\"Patrick\" and was released in the year\n2000 which pulls up the movie, XMen",
			"descriptionFormat": "html",
			"time": 1428805230396,
			"version": 2,
			"responses": [],
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionOwner": 0,
			"synced": false
		},
		{
			"id": "206dd75f-8dbd-d076-fdb2-e7d52151b696",
			"headers": "",
			"url": "127.0.0.1:3000/movies?ql=select *",
			"pathVariables": {},
			"preRequestScript": "",
			"method": "GET",
			"collectionId": "b532a7aa-b8e5-3e86-b472-c62f33d6007a",
			"data": [],
			"dataMode": "params",
			"name": "Get entire movie list",
			"description": "An example of how to retrieve\nall the movies in the collection.",
			"descriptionFormat": "html",
			"time": 1428797567099,
			"version": 2,
			"responses": [],
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionOwner": 0,
			"synced": false
		},
		{
			"id": "38073033-b754-cb5a-2f1b-d78cf31d9fc2",
			"headers": "",
			"url": "127.0.0.1:3000/movies?ql=select * where actors contains 'Patrick'",
			"pathVariables": {},
			"preRequestScript": "",
			"method": "GET",
			"collectionId": "b532a7aa-b8e5-3e86-b472-c62f33d6007a",
			"data": [],
			"dataMode": "params",
			"name": "Query using contains",
			"description": "This is an example of querying the \ncollection where the actors contains\nsome characters, in this case \"Patrick\"",
			"descriptionFormat": "html",
			"time": 1428798839148,
			"version": 2,
			"responses": [],
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionOwner": 0,
			"synced": false
		},
		{
			"id": "a93282e7-97ce-b287-c9c5-c1c3cb4c57f6",
			"headers": "",
			"url": "127.0.0.1:3000/delete?name=Jurassic Park",
			"pathVariables": {},
			"preRequestScript": "",
			"method": "DELETE",
			"collectionId": "b532a7aa-b8e5-3e86-b472-c62f33d6007a",
			"data": [],
			"dataMode": "params",
			"name": "Delete an entity",
			"description": "This is an example of deleting an existing \nentity from the movie collection",
			"descriptionFormat": "html",
			"time": 1428797357298,
			"version": 2,
			"responses": [],
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionOwner": 0,
			"synced": false
		},
		{
			"id": "c15ad60f-49a3-70ee-ae86-c0a514e9e71e",
			"headers": "",
			"url": "127.0.0.1:3000/movies?ql=select * where name = 'Mean Girls'",
			"pathVariables": {},
			"preRequestScript": "",
			"method": "GET",
			"collectionId": "b532a7aa-b8e5-3e86-b472-c62f33d6007a",
			"data": [],
			"dataMode": "params",
			"name": "Query to get a single entity",
			"description": "Here we can pull a single entity by\nlisting the name in the query",
			"descriptionFormat": "html",
			"time": 1428805413146,
			"version": 2,
			"responses": [],
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionOwner": 0,
			"synced": false
		},
		{
			"id": "eaf4ea42-f4ff-4004-dd1f-8eeebb196210",
			"headers": "",
			"url": "127.0.0.1:3000/movies?ql=select * order by name asc",
			"pathVariables": {},
			"preRequestScript": "",
			"method": "GET",
			"collectionId": "b532a7aa-b8e5-3e86-b472-c62f33d6007a",
			"data": [],
			"dataMode": "params",
			"name": "Query by ascending order",
			"description": "An example of how to retrieve\nall the movies in the collection\nand list them in ascending order",
			"descriptionFormat": "html",
			"time": 1428797658931,
			"version": 2,
			"responses": [],
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionOwner": 0,
			"synced": false
		},
		{
			"id": "f0a73127-0af7-4da8-5134-31b5f01d2822",
			"headers": "",
			"url": "127.0.0.1:3000/create?name=Jurassic Park&debut=1993&actors=Sam Neill, Laura Dern, Jeff Goldblum",
			"pathVariables": {},
			"preRequestScript": "",
			"method": "POST",
			"collectionId": "b532a7aa-b8e5-3e86-b472-c62f33d6007a",
			"data": [],
			"dataMode": "params",
			"name": "Create an entity",
			"description": "This is an example of creating an entity\nin the movie collection.",
			"descriptionFormat": "html",
			"time": 1428797101485,
			"version": 2,
			"responses": [],
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"collectionOwner": 0,
			"synced": false
		}
	]
}